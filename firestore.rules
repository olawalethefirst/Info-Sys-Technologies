rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /posts/{postID} {
    	allow read;
      allow create: if request.auth != null
      allow update: if debug(request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']) && request.resource.data.get('likes', {}).diff(resource.data.get('likes', {})).affectedKeys().hasOnly([request.auth.uid]) && (request.resource.data.get('likes', {}).diff(resource.data.get('likes', {})).removedKeys().hasOnly([request.auth.uid])||request.resource.data.get('likes', {}).diff(resource.data.get('likes', {})).addedKeys().hasOnly([request.auth.uid]) && request.resource.data.get(['likes', request.auth.uid], null) > request.time - duration.value(5, 's'))) 

//       if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']) && request.resource.data.get('likes', {}).diff(resource.data.get('likes', {})).affectedKeys().hasOnly([request.auth.uid]) && request.resource.data.get('likes', {}).diff(resource.data.get('likes', {})).removedKeys().hasOnly([request.auth.uid]) ||
//       if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']) && request.resource.data.get('likes', {}).diff(resource.data.get('likes', {})).affectedKeys().hasOnly([request.auth.uid]) && request.resource.data.get('likes', {}).diff(resource.data.get('likes', {})).addedKeys().hasOnly([request.auth.uid]) && request.resource.data.get(['likes', request.auth.uid], null) > request.time - duration.value(5, 's')
      
      // bool,bytes,constraint,duration,float,int,latlng,list,set,number,map,string,timestamp,path,map_diff
      
      // if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']) 
      // request.auth.uid 
      // allow update: if request.resource.data.get('likes', '').removeAll(resource.data.get('likes', ''))[0].get('createdAt', '') > request.time - duration.value(3, 's')
      // should edit for thorough security later	
    	//allows posts update only when likes field is only affected and timeStamp is in last 5s 
    	// allow update: if  2+ 0 - 1 + 3 <= 4
      // 50000000
      
    }
  }
}